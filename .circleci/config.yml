version: 2
jobs:
  test:
    working_directory: ~/Fundthrough/audited
    parallelism: 1
    shell: /bin/bash --login
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
    docker:
      - image: circleci/ruby:2.3-stretch
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: audited
          RAILS_ENV: test
          CC_TEST_REPORTER_ID: TODOTODOTODOTODOTODOTODOTODOTODO
          COVERAGE: true
    steps:
      - checkout
      - run:
          name: Create artifacts folder
          command: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
      - run:
          name: Install bundler
          command: gem install bundler
      - run:
          name: Which bundler?
          command: bundle -v
      - restore_cache:
          keys:
            - audited{{ checksum "Gemfile.lock" }}
            - audited
      - run:
          name: Bundle install
          command: "bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs=4 --retry=3"
      - save_cache:
          key: audited{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Install Code Climate Test Reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: Rspec
          command: |
            mkdir /tmp/test-results
            ./cc-test-reporter before-build
            bundle exec rspec --profile 10 \
                              --color \
                              --require rails_helper  \
                              --format progress \
                              --format RspecJunitFormatter \
                              --out test-results/rspec/rspec.xml
      - run:
          name: Code Climate Test Coverage
          command: |
            ./cc-test-reporter format-coverage -t simplecov -o "coverage/codeclimate.$CIRCLE_NODE_INDEX.json"
      - store_test_results:
          path: /tmp/circleci-test-results
      - store_artifacts:
          path: /tmp/circleci-artifacts
      - store_artifacts:
          path: /tmp/circleci-test-results
      - deploy:
          command: |
            ./cc-test-reporter sum-coverage --output - --parts $CIRCLE_NODE_TOTAL coverage/codeclimate.*.json | ./cc-test-reporter upload-coverage --debug --input -
  
workflows:
  version: 2
  build-deploy:
    jobs:
      - test
